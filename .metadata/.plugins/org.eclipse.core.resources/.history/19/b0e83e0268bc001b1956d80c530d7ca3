<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>

</head>

<body>
	<div>
		<a href="toAddGoods">新建活动</a>
	</div>
	<table>
		<thead>
			<tr>
				<th>Name</th>
				<th>Remark</th>
				<th>CreatedTime</th>
				<th>Operation</th>
			</tr>
		</thead>
		<tbody id="tbodyId">
			<!--th:each,th:text,${} 由 thymeaf 引擎进行定义 -->
			<tr>

				<td><a th:href="@{/Goods/goodsById(id=${g.id})}">修改</a> <a
					th:href="@{/Goods/goodsDelete(id=${g.id})}">删除</a></td>
			</tr>
		</tbody>
		<script type="text/javascript">
			function doAjaxGet(url,params,callback){
				var xhr = new XMLHttpRequest();
				xhr.onreadystatechange = function(){
					if(xhr.readyState==4&&xhr.status==200){
						callback(xhr.responseText);
					}
				}
				xhr.open("GET",url+"?"+params,true);
				xhr.send(null);
			}
			function doGetActivitys(){
				debugger
				const url = "doGoods";
				var params = "";
				doAjaxGet(url,params,function(result){
					console.log("JsonStr",result);
					doHandleResponseResult(result);
				});
			}
			doGetActivitys();
			
			function doHandleResponseResult(result){
				//1.将 json 格式字符串转换为 json 格式的 JS 对象(字符串无法直
				接提取内容)
				var jsonObj=JSON.parse(result);//JSON 为 JS 中的一个类
				console.log("jsonObj",jsonObj);
				//2.将 json 对象中的数据更新到页面上
				//2.1 迭代 jsonObj 对象中的数据，并将数据拼接到 tr 字符串中
				var trs="";
				for(var i=0;i<jsonObj.length;i++){//循环一次取一行
				trs+="<tr>"+
				通过 doHandleResponseResult 方法将 ajax 获得的响应结果呈现在页面上。
				"<td>"+jsonObj[i].id+"</td>"+
				"<td>"+jsonObj[i].title+"</td>"+
				"<td>"+jsonObj[i].category+"</td>"+
				"<td>"+new
				Date(jsonObj[i].startTime).toLocaleString()+"</td>"+ "<td>"+new
				Date(jsonObj[i].endTime).toLocaleString()+"</td>"+
				"<td>"+(jsonObj[i].state?"进行中":"已结束")+"</td>"+
				"<td><a
				onclick=doDeleteById('"+row.id+"')>delete</a></td>"+
				"</tr>"
				}
				//2.2 将字符换以 html 形式更新到 tbody 中
				var tBody=document.getElementById("tbodyId");//tbodyId
				为给 tbody 标签加了一个 id
				tBody.innerHTML=trs; }
		</script>
	</table>
</body>
</html>